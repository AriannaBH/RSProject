@model RSProject.Data.EF.UserDetail

@{
    ViewBag.Title = "Create";
}

<header class="myMasthead">
    <section class="page-section">
        <div class="container">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="text-center">
                    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <h2 class="section-heading text-uppercase mt-5">@ViewBag.Title</h2>
                        <h3 class="section-subheading text-muted">User</h3>
                    }
                    @if (Request.IsAuthenticated && User.IsInRole("Customer"))
                    {
                        <h2 class="section-heading text-uppercase mt-5">@ViewBag.Title</h2>
                        <h3 class="section-subheading text-muted">Coach</h3>
                    }

                    <br />
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserID)

                @*<div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
            <div class="col-md-10 offset-1">

                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })

                    <div class="col-md-10 offset-1">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                    <div class="col-md-10 offset-1">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                    <div class="col-md-10 offset-1">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                    <div class="col-md-10 offset-1">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>





                <div class="form-group">
                    <div class="col-md-10 offset-1 text-center">
                        <input type="submit" value="Create" class="btn btn-primary btn-xl text-uppercase" />
                    </div>
                </div>
            </div>
            }

            <div class="myLinkTwo offset-1">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </section>
</header>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
