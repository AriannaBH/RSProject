@model RSProject.Data.EF.Location

@{
    ViewBag.Title = "Create";
}

<header class="myMasthead">
    <section class="page-section">
        <div class="container">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="text-center">
                        <h2 class="section-heading text-uppercase mt-5">@ViewBag.Title</h2>
                        <h3 class="section-subheading text-muted">New Location</h3>
                        <br />
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                        <div class="col-md-10 offset-1">
                            @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                        <div class="col-md-10 offset-1">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                        <div class="col-md-10 offset-1">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                        <div class="col-md-10 offset-1">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                        <div class="col-md-10 offset-1">
                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReservationLimit, htmlAttributes: new { @class = "control-label col-md-2 offset-1 myBody" })
                        <div class="col-md-10 offset-1">
                            @Html.EditorFor(model => model.ReservationLimit, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReservationLimit, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10 offset-1 text-center">
                            <input type="submit" value="Create" class="btn btn-primary btn-xl text-uppercase" />
                        </div>
                    </div>
                </div>
            }

            <div class="myLinkTwo offset-1">
                @Html.ActionLink("Back to List", "Index")
            </div>

        </div>
    </section>
</header>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
